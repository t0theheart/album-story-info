I chose a microservices architecture.

Reasons why choosing:
1. My own interest
2. It's popular
3. My application will be successfully divided into microservices with its own logic (The Single Responsibility Principle)

Microservices:

1. album-storage (albums data storage and album crud rest api)
2. album-users (users and authentication)

There is a hexagonal architecture in every microservice.

HTTP is a way for communication between microservices and web client.
